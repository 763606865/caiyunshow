name: caiyunshow-github-actions

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production
    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.3'
    - uses: actions/checkout@v3
    - name: Create .env
      run: |
        touch .env
        echo APP_KEY= > .env
        echo APP_NAME=${{ vars.APP_NAME }} >> .env
        echo APP_ENV=${{ vars.APP_ENV }} >> .env
        echo APP_DEBUG=${{ vars.APP_DEBUG }} >> .env
        echo APP_URL=${{ vars.APP_URL }} >> .env
        echo DB_CONNECTION=${{ vars.DB_CONNECTION }} >> .env
        echo DB_PORT=${{ vars.DB_PORT }} >> .env
        echo DB_HOST=${{ secrets.DB_HOST }} >> .env
        echo DB_DATABASE=${{ secrets.DB_DATABASE }} >> .env
        echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
        echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
        echo WECHAT_BUSINESS_APP_ID=${{ secrets.WECHAT_BUSINESS_APP_ID }} >> .env
        echo WECHAT_BUSINESS_APP_SECRET=${{ secrets.WECHAT_BUSINESS_APP_SECRET }} >> .env
        echo WECHAT_BUSINESS_CRYPT_SN=${{ secrets.WECHAT_BUSINESS_CRYPT_SN }} >> .env
        echo WECHAT_BUSINESS_CRYPT_KEY=${{ secrets.WECHAT_BUSINESS_CRYPT_KEY }} >> .env
        echo WECHAT_BUSINESS_SIGNATURE_SN=${{ secrets.WECHAT_BUSINESS_SIGNATURE_SN }} >> .env
        echo WECHAT_BUSINESS_SIGNATURE_PRIVATE_KEY=${{ secrets.WECHAT_BUSINESS_SIGNATURE_PRIVATE_KEY }} >> .env
        echo WECHAT_BUSINESS_SIGNATURE_PUBLIC_KEY=${{ secrets.WECHAT_BUSINESS_SIGNATURE_PUBLIC_KEY }} >> .env
        echo WECHAT_BUSINESS_SIGNATURE_AUTH_CER=${{ secrets.WECHAT_BUSINESS_SIGNATURE_AUTH_CER }} >> .env
        echo WECHAT_BUSINESS_SIGNATURE_SERIAL=${{ secrets.WECHAT_BUSINESS_SIGNATURE_SERIAL }} >> .env
        echo WECHAT_BUSINESS_CRYPT_ENABLE=${{ secrets.WECHAT_BUSINESS_CRYPT_ENABLE }} >> .env
        echo REDIS_HOST=${{ secrets.REDIS_HOST }} >> .env
        echo REDIS_USERNAME=${{ secrets.REDIS_USERNAME }} >> .env
    - name: Install Dependencies
      run: composer install
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Deploy to aliyun server        # 为 step 指定一个名称，将会在 github action 的控制台中显示
      uses: easingthemes/ssh-deploy@v2.1.5      #可以访问的仓库，实现的上传服务器步骤被封装在此action
      env:
        SSH_PRIVATE_KEY: ${{ secrets.ALI_PRIVATE_KEY }}  #这个是阿里云的私钥
        ARGS: "-avzr --delete"
        SOURCE: "./"
        REMOTE_HOST: ${{ secrets.ALI_HOSTS }}    #阿里云的 ip
        REMOTE_USER: ${{ secrets.ALI_USER }}    #阿里云用户
        TARGET: "/var/www/html/caiyunshow"       #被部署的服务器路径
  after_script:
    runs-on: ubuntu-latest
    environment: Production
    steps:
    - uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.ALI_HOSTS }}
        username: ${{ secrets.ALI_USER }}
        key: ${{ secrets.ALI_PRIVATE_KEY }}
        script: |
          cd /var/www/html/caiyunshow
          php artisan migrate --force
          php artisan storage:link
